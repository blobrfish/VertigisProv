using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Data.SqlClient;
using ProvWebApi.Dtos;
using System.Data;


namespace ProvWebApi
{

    public class ItemsRepository 
    {
        public IEnumerable<ItemDto> Get()
        {
            var result = new List<ItemDto>();

            System.Text.StringBuilder sql = new System.Text.StringBuilder();

            sql.AppendLine(@"
			select Items.Id,  Items.Name, Items.Age, Items.Hobby, Items.Image
			from Items");

            using (SqlConnection cnn = new SqlConnection(@"Server=tcp:nizams1.database.windows.net,1433;Initial Catalog=blobrfishData;Persist Security Info=False;User ID=NizamArif;Password=NewPassword123***;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"))
            {
                using (SqlCommand cmd = new SqlCommand(sql.ToString(), cnn))
                {
                    cnn.Open();
                    using (SqlDataReader dr = cmd.ExecuteReader(System.Data.CommandBehavior.CloseConnection))
                    {
                        while (dr.Read())
                        {
                            result.Add(new ItemDto
                            {
                                // we probobly woudl need to send id as well in the future!
                                //Id = dr.GetFieldValue<int>(dr.GetOrdinal("Id")),
                                Name = dr.GetFieldValue<string>(dr.GetOrdinal("Name")),
                                Age = dr.GetFieldValue<int>(dr.GetOrdinal("Age")),
                                Hobby = dr.GetFieldValue<string>(dr.GetOrdinal("Hobby")),
                                Image = dr.IsDBNull(dr.GetOrdinal("Image")) ? null : Services.ConvertFromByteArrayToString((byte[])dr["Image"]),
                            });

                        }

                    }
                }
            }
            return result;
        }

        public void Add(IEnumerable<ItemDto> items)
        {
            Random random = new Random();
            DataTable dt = new DataTable(); 
            dt.Columns.Add("Id", typeof(int));
            dt.Columns.Add("Name", typeof(string));
            dt.Columns.Add("Age", typeof(int));
            dt.Columns.Add("Hobby", typeof(string));
            dt.Columns.Add("Image", typeof(byte[]));
            foreach (var itm in items)
            {
                DataRow row = dt.NewRow();
                row["Id"] = random.Next(0, 1000000); //bad! how do we make the id field generated by the database??!!
                row["Name"] = itm.Name;
                row["Age"] = itm.Age;
                row["Hobby"] = itm.Hobby;
                row["Image"] = Services.ConvertImageToBytes(itm.Image); 
                dt.Rows.Add(row);
            }
            using (SqlConnection cn = new SqlConnection(@"Server=tcp:nizams1.database.windows.net,1433;Initial Catalog=blobrfishData;Persist Security Info=False;User ID=NizamArif;Password=NewPassword123***;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"))
            {
                cn.Open();
                using (SqlBulkCopy bulkCopy = new SqlBulkCopy(cn))
                {
                    bulkCopy.DestinationTableName = "dbo.Items";
                    bulkCopy.WriteToServer(dt);
                }
                cn.Close();
            }
        }
    }
}
